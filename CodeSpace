# Create the build script
cd ~/hotel-management-frontend
cat > build.sh << 'EOF'
#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Print header
echo -e "${BLUE}================================================${NC}"
echo -e "${BLUE}   ߚ Hotel Management Frontend Build Script   ${NC}"
echo -e "${BLUE}================================================${NC}"
echo ""

# Step 1: Build the application
print_status "Step 1: Building Next.js application..."
if npm run build; then
    print_success "Build completed successfully!"
else
    print_error "Build failed! Please check the errors above."
    exit 1
fi
echo ""

# Step 2: Check and kill processes on port 3000
print_status "Step 2: Checking for processes on port 3000..."
PIDS=$(sudo lsof -ti:3000)

if [ -z "$PIDS" ]; then
    print_warning "No processes found running on port 3000"
else
    print_status "Found processes on port 3000: $PIDS"
    print_status "Killing processes..."
    
    # Kill each process
    for PID in $PIDS; do
        if sudo kill -9 $PID 2>/dev/null; then
            print_success "Killed process $PID"
        else
            print_warning "Could not kill process $PID (may have already stopped)"
        fi
    done
    
    # Wait a moment for processes to fully terminate
    sleep 2
    
    # Double-check if any processes are still running
    REMAINING_PIDS=$(sudo lsof -ti:3000)
    if [ -z "$REMAINING_PIDS" ]; then
        print_success "All processes on port 3000 have been stopped"
    else
        print_warning "Some processes may still be running: $REMAINING_PIDS"
    fi
fi
echo ""

# Step 3: Check if PM2 processes exist and stop them
print_status "Step 3: Checking PM2 processes..."
if command -v pm2 >/dev/null 2>&1; then
    PM2_PROCESSES=$(pm2 list | grep -E "hotel|frontend|nextjs" | wc -l)
    if [ $PM2_PROCESSES -gt 0 ]; then
        print_status "Stopping PM2 processes..."
        pm2 stop all
        pm2 delete all
        print_success "PM2 processes stopped and deleted"
    else
        print_warning "No relevant PM2 processes found"
    fi
else
    print_warning "PM2 not found, skipping PM2 cleanup"
fi
echo ""

# Step 4: Wait a bit more to ensure ports are free
print_status "Step 4: Waiting for ports to be fully released..."
sleep 3

# Step 5: Start the application
print_status "Step 5: Starting the application..."
if [ -f "./start.sh" ]; then
    # Make sure start.sh is executable
    chmod +x ./start.sh
    
    print_status "Executing ./start.sh..."
    if ./start.sh; then
        print_success "Application started successfully!"
    else
        print_error "Failed to start application with ./start.sh"
        exit 1
    fi
else
    print_error "./start.sh not found!"
    print_status "Attempting to start with npm start..."
    if npm start &; then
        print_success "Application started with npm start"
    else
        print_error "Failed to start application"
        exit 1
    fi
fi
echo ""

# Step 6: Final status check
print_status "Step 6: Checking if application is running..."
sleep 5

# Check if port 3000 is now in use (indicating successful start)
if sudo lsof -i:3000 >/dev/null 2>&1; then
    NEW_PID=$(sudo lsof -ti:3000)
    print_success "Application is running! PID: $NEW_PID"
    print_success "Access your application at: http://localhost:3000"
else
    print_warning "Application may not be running on port 3000"
    print_status "Please check the logs above for any errors"
fi

echo ""
echo -e "${GREEN}================================================${NC}"
echo -e "${GREEN}   ✅ Build and deployment process completed!   ${NC}"
echo -e "${GREEN}================================================${NC}"
echo ""
print_status "If you see any issues, check the application logs:"
print_status "  - PM2 logs: pm2 logs"
print_status "  - Manual start: npm start"
print_status "  - Check ports: sudo lsof -i:3000"
EOF

# Make the script executable
chmod +x build.sh

echo "✅ build.sh script created successfully!"
