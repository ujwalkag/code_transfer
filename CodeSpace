 // pages/admin/dashboard.js
import { useEffect, useState } from "react";
import { useAuth } from "@/context/AuthContext";
import withRoleGuard from "@/hoc/withRoleGuard";
import Link from "next/link";

function AdminDashboard() {
  const { user, logout } = useAuth();
  const [summary, setSummary] = useState(null);
  const [inventoryStats, setInventoryStats] = useState({});
  const [recentEntries, setRecentEntries] = useState([]);
  const [activeTab, setActiveTab] = useState('dashboard');

  // Fetch overall summaries
  useEffect(() => {
    const fetchSummary = async () => {
      try {
        const res = await fetch("/api/bills/summary/", {
          headers: { Authorization: `Bearer ${user?.access}` }
        });
        const data = await res.json();
        setSummary(data);
      } catch (err) {
        console.error("Error loading summary", err);
      }
    };

    // Fetch inventory dashboard stats
    const fetchInventoryStats = async () => {
      try {
        const res = await fetch("/api/inventory/entries/dashboard_stats/", {
          headers: { Authorization: `Bearer ${user?.access}` }
        });
        if (res.ok) {
          const data = await res.json();
          setInventoryStats(data);
          setRecentEntries(data.recent_entries || []);
        }
      } catch (err) {
        console.error("Inventory API Error", err);
        setInventoryStats({ current_month_spent: 0, total_categories: 0 });
        setRecentEntries([]);
      }
    };

    if (user?.access) {
      fetchSummary();
      fetchInventoryStats();
    }
  }, [user]);

  return (
    <div className="p-6 max-w-6xl mx-auto">
      {/* Header & Logout */}
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold">ߏ व्यवस्थापक डैशबोर्ड / Admin Dashboard</h1>
        <button
          onClick={logout}
          className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
        >
          लॉगआउट / Logout
        </button>
      </div>

      {/* Tab Navigation */}
      <div className="flex space-x-4 mb-6 border-b">
        <button
          onClick={() => setActiveTab('dashboard')}
          className={`px-4 py-2 font-medium ${
            activeTab === 'dashboard'
              ? 'border-b-2 border-blue-600 text-blue-600'
              : 'text-gray-500 hover:text-gray-700'
          }`}
        >
          ߓ डैशबोर्ड / Dashboard
        </button>
        <button
          onClick={() => setActiveTab('inventory')}
          className={`px-4 py-2 font-medium ${
            activeTab === 'inventory'
              ? 'border-b-2 border-blue-600 text-blue-600'
              : 'text-gray-500 hover:text-gray-700'
          }`}
        >
          ߓ स्टॉक ट्रैकिंग / Stock Tracking
        </button>
      </div>

      {/* Dashboard View */}
      {activeTab === 'dashboard' && (
        <>
          {/* Billing Summary Cards */}
          {summary && (
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 mb-8">
              <StatCard title="Today / आज" value={summary.total_today} />
              <StatCard title="This Week / इस सप्ताह" value={summary.total_week} />
              <StatCard title="This Month / इस माह" value={summary.total_month} />
              <StatCard title="Total Bills / कुल बिल" value={summary.total_bills} />
            </div>
          )}

          {/* Navigation Cards */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
            <LinkCard href="/admin/restaurant-billing" label="ߍ️ रेस्टोरेंट बिलिंग / Restaurant Billing" />
            <LinkCard href="/admin/manage-menu" label="ߓ मेन्यू प्रबंधन / Manage Menu" />
            <LinkCard href="/admin/manage-categories" label="ߓ श्रेणियाँ / Manage Categories" />
            <LinkCard href="/admin/manage-staff" label="ߑ स्टाफ प्रबंधन / Manage Staff" />
            <LinkCard href="/admin/room-billing" label="ߏ रूम बिलिंग / Room Billing" />
            <LinkCard href="/admin/manage-rooms" label="ߏ कमरा प्रबंधन / Manage Rooms" />
            <LinkCard href="/admin/bill-history" label="ߓ बिल इतिहास / Bill History" />
            <LinkCard href="/admin/analytics" label="ߓ विश्लेषण / Analytics" />
          </div>
        </>
      )}

      {/* Inventory/Stock Tracking View */}
      {activeTab === 'inventory' && (
        <>
          {/* Stats Summary */}
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6">
            <StatCard
              title="इस महीने का खर्च / Current Month Spent"
              value={parseFloat(inventoryStats.current_month_spent || 0).toFixed(2)}
              color="text-purple-600"
            />
            <StatCard
              title="कुल श्रेणियाँ / Total Categories"
              value={inventoryStats.total_categories || 0}
              isCount={true}
              color="text-green-600"
            />
            <StatCard
              title="हाल की एंट्रियां / Recent Entries"
              value={recentEntries.length || 0}
              isCount={true}
              color="text-blue-600"
            />
          </div>

          {/* Quick Actions */}
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6">
            <QuickActionCard
              href="/admin/inventory"
              icon="ߓ"
              title="सभी एंट्रियां / All Entries"
              subtitle="View all purchases"
              description="View, edit, report"
            />
            <QuickActionCard
              href="/admin/inventory-add-entry"
              icon="➕"
              title="खरीदारी जोड़ें / Add Purchase"
              subtitle="Record new purchase"
              description="Add stock purchase"
            />
            <QuickActionCard
              href="/admin/inventory-categories"
              icon="ߓ"
              title="श्रेणियाँ / Categories"
              subtitle="Manage item categories"
              description="Add/edit/delete categories"
            />
          </div>

          {/* Recent Entries Table */}
          <div className="bg-white rounded-xl shadow p-6 mb-8">
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-lg font-semibold">हाल की खरीद / Recent Purchases</h3>
              <Link
                href="/admin/inventory"
                className="text-blue-600 hover:text-blue-800 text-sm font-medium"
              >
                सभी देखें → / View All
              </Link>
            </div>
            {recentEntries.length > 0 ? (
              <div className="overflow-x-auto">
                <table className="w-full">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">Date / दिनांक</th>
                      <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">Item / आइटम</th>
                      <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">Category / श्रेणी</th>
                      <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">Quantity / मात्रा</th>
                      <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">Total Cost / कुल लागत</th>
                      <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">Supplier / आपूर्तिकर्ता</th>
                    </tr>
                  </thead>
                  <tbody className="divide-y divide-gray-200">
                    {recentEntries.slice(0, 5).map((entry) => (
                      <tr key={entry.id} className="hover:bg-gray-50">
                        <td className="px-4 py-2">{new Date(entry.purchase_date).toLocaleDateString('en-IN')}</td>
                        <td className="px-4 py-2">{entry.item_name}</td>
                        <td className="px-4 py-2">{entry.category_name}</td>
                        <td className="px-4 py-2">{entry.quantity}</td>
                        <td className="px-4 py-2 font-semibold text-green-600">₹{parseFloat(entry.total_cost).toLocaleString('en-IN')}</td>
                        <td className="px-4 py-2">{entry.supplier_name}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            ) : (
              <div className="text-center py-8 text-gray-500">
                कोई इन्वेंट्री एंट्री नहीं / No entries
              </div>
            )}
          </div>
        </>
      )}
    </div>
  );
}

// Reusable component: StatCard
function StatCard({ title, value, isCount = false, color = "text-gray-900" }) {
  const displayValue = isCount ? value?.toLocaleString("en-IN") || "0" : `₹${parseFloat(value || 0).toFixed(2)}`;
  return (
    <div className="p-4 bg-white border rounded-xl shadow text-center">
      <h3 className="text-sm text-gray-500">{title}</h3>
      <p className={`text-2xl font-bold mt-2 ${color}`}>{displayValue}</p>
    </div>
  );
}

// Quick actions: small cards
function QuickActionCard({ href, icon, title, subtitle, description }) {
  return (
    <Link
      href={href}
      className="block p-4 bg-white border rounded-xl shadow hover:shadow-lg transition"
    >
      <div className="text-center">
        <div className="text-3xl mb-2">{icon}</div>
        <h3 className="text-lg font-semibold text-gray-800">{title}</h3>
        <p className="text-sm text-gray-500 mb-2">{subtitle}</p>
        <p className="text-xs text-gray-400">{description}</p>
      </div>
    </Link>
  );
}

export default withRoleGuard(AdminDashboard, ["admin"]);
