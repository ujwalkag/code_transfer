// pages/admin/dashboard.js - COMPLETE SIMPLIFIED VERSION
import { useEffect, useState } from "react";
import { useAuth } from "@/context/AuthContext";
import withRoleGuard from "@/hoc/withRoleGuard";
import Link from "next/link";

function AdminDashboard() {
  const { user, logout } = useAuth();
  const [summary, setSummary] = useState(null);
  const [inventoryStats, setInventoryStats] = useState({});
  const [recentInventoryEntries, setRecentInventoryEntries] = useState([]);
  const [activeTab, setActiveTab] = useState('dashboard');

  useEffect(() => {
    const fetchSummary = async () => {
      try {
        const res = await fetch("/api/bills/summary/", {
          headers: { Authorization: `Bearer ${user?.access}` },
        });
        const data = await res.json();
        setSummary(data);
      } catch (err) {
        console.error("Error loading summary");
      }
    };

    const fetchInventoryData = async () => {
      try {
        const statsRes = await fetch("/api/inventory/entries/dashboard_stats/", {
          headers: { Authorization: `Bearer ${user?.access}` },
        });
        
        if (statsRes.ok) {
          const statsData = await statsRes.json();
          setInventoryStats(statsData);
          setRecentInventoryEntries(statsData.recent_entries || []);
        }
      } catch (err) {
        console.error("Error loading inventory data:", err);
        setInventoryStats({
          current_month_spent: 0,
          total_categories: 0
        });
        setRecentInventoryEntries([]);
      }
    };

    if (user?.access) {
      fetchSummary();
      fetchInventoryData();
    }
  }, [user]);

  return (
    <div className="p-6 max-w-6xl mx-auto">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold">ߏ Admin Dashboard / व्यवस्थापक डैशबोर्ड</h1>
        <button
          onClick={logout}
          className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
        >
          Logout / लॉगआउट
        </button>
      </div>

      {/* Tab Navigation */}
      <div className="flex space-x-4 mb-6 border-b">
        <button
          onClick={() => setActiveTab('dashboard')}
          className={`px-4 py-2 font-medium ${
            activeTab === 'dashboard'
              ? 'text-blue-600 border-b-2 border-blue-600'
              : 'text-gray-500 hover:text-gray-700'
          }`}
        >
          ߓ Dashboard / डैशबोर्ड
        </button>
        <button
          onClick={() => setActiveTab('inventory')}
          className={`px-4 py-2 font-medium ${
            activeTab === 'inventory'
              ? 'text-blue-600 border-b-2 border-blue-600'
              : 'text-gray-500 hover:text-gray-700'
          }`}
        >
          ߓ Stock Tracking / स्टॉक ट्रैकिंग
        </button>
      </div>

      {/* Dashboard Tab */}
      {activeTab === 'dashboard' && (
        <>
          {/* Billing Summary Stats */}
          {summary && (
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 mb-8">
              <StatCard label="Total Today / आज का कुल" value={summary.total_today} />
              <StatCard label="This Week / इस सप्ताह" value={summary.total_week} />
              <StatCard label="This Month / इस माह" value={summary.total_month} />
              <StatCard label="Total Bills / कुल बिल" value={summary.total_bills} />
            </div>
          )}

          {/* Main Navigation Cards */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
            <LinkCard href="/admin/restaurant-billing" label="ߍ️ Restaurant Billing / रेस्टोरेंट बिलिंग" />
            <LinkCard href="/admin/manage-menu" label="ߓ Manage Menu / मेनू प्रबंधन" />
            <LinkCard href="/admin/manage-categories" label="ߓ Manage Categories / श्रेणी प्रबंधन" />
            <LinkCard href="/admin/manage-staff" label="ߑ Manage Staff / स्टाफ प्रबंधन" />
            <LinkCard href="/admin/room-billing" label="ߏ Room Billing / रूम बिलिंग" />
            <LinkCard href="/admin/manage-rooms" label="ߏ Manage Rooms / कमरा प्रबंधन" />
            <LinkCard href="/admin/bill-history" label="ߓ View Bill History / बिल इतिहास देखें" />
            <LinkCard href="/admin/analytics" label="ߓ Analytics Dashboard / विश्लेषण डैशबोर्ड" />
          </div>
        </>
      )}

      {/* Stock Tracking Tab */}
      {activeTab === 'inventory' && (
        <>
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-2xl font-semibold">Stock Tracking / स्टॉक ट्रैकिंग</h2>
            <Link 
              href="/admin/inventory-add-entry" 
              className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700"
            >
              ➕ Add Purchase / खरीदारी जोड़ें
            </Link>
          </div>

          {/* Simple Stats */}
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6">
            <StatCard 
              label="This Month Spent / इस महीने खर्च" 
              value={parseFloat(inventoryStats.current_month_spent || 0).toFixed(2)}
              color="text-purple-600"
            />
            <StatCard 
              label="Categories / श्रेणियाँ" 
              value={inventoryStats.total_categories || 0}
              color="text-green-600"
              isCount={true}
            />
            <StatCard 
              label="Recent Entries / हाल की
