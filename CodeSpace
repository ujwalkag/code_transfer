cd ~/hotel-management-backend

# Remove inventory app completely
rm -rf apps/inventory/

# Remove inventory from INSTALLED_APPS
sed -i "/apps.inventory/d" config/settings.py

# Remove inventory URLs
sed -i "/api\/inventory/d" config/urls.py

# Remove inventory migrations from database
source venv/bin/activate
python manage.py shell << 'EOF'
from django.db import connection
cursor = connection.cursor()

# Drop all inventory tables
try:
    cursor.execute("DROP TABLE IF EXISTS inventory_category CASCADE;")
    cursor.execute("DROP TABLE IF EXISTS inventory_item CASCADE;") 
    cursor.execute("DROP TABLE IF EXISTS inventory_supplier CASCADE;")
    cursor.execute("DROP TABLE IF EXISTS inventory_stock_movement CASCADE;")
    cursor.execute("DROP TABLE IF EXISTS inventory_low_stock_alert CASCADE;")
    cursor.execute("DROP TABLE IF EXISTS inventory_purchase_order CASCADE;")
    cursor.execute("DROP TABLE IF EXISTS inventory_purchase_order_item CASCADE;")
    print("✅ All inventory tables dropped")
except Exception as e:
    print(f"Error dropping tables: {e}")
EOF

# Remove inventory migrations from django_migrations table
python manage.py shell << 'EOF'
from django.db import connection
cursor = connection.cursor()
try:
    cursor.execute("DELETE FROM django_migrations WHERE app = 'inventory';")
    print("✅ Inventory migrations removed")
except Exception as e:
    print(f"Error removing migrations: {e}")
EOF

deactivate

///////////////////////////////
cd ~/hotel-management-frontend

# Remove all inventory pages
rm -f pages/admin/inventory*.js
rm -f pages/inventory*.js
rm -rf pages/inventory/

# Remove inventory components
rm -rf components/inventory/
rm -f components/admin/InventorySection.js

echo "✅ Frontend inventory files removed"
//////////////////////////////////////////
# Restart backend
cd ~/hotel-management-backend
sudo systemctl restart gunicorn
sudo systemctl restart nginx

# Restart frontend
cd ~/hotel-management-frontend  
pm2 restart all

echo "✅ All services restarted - Inventory completely removed"
