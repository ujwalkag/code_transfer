# Create components directory if it doesn't exist
mkdir -p components/admin

# Create the inventory component
cat > components/admin/InventorySection.js << 'EOF'
import { useState, useEffect } from 'react';
import axios from '../../utils/axiosInstance';

const InventorySection = () => {
  const [items, setItems] = useState([]);
  const [categories, setCategories] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetchInventoryData();
  }, []);

  const fetchInventoryData = async () => {
    try {
      setLoading(true);
      setError(null);
      
      const [itemsRes, categoriesRes] = await Promise.all([
        axios.get('/api/inventory/items/').catch(err => {
          console.log('Items API failed:', err);
          return { data: [] };
        }),
        axios.get('/api/inventory/categories/').catch(err => {
          console.log('Categories API failed:', err);
          return { data: [] };
        })
      ]);
      
      setItems(itemsRes.data.results || itemsRes.data || []);
      setCategories(categoriesRes.data.results || categoriesRes.data || []);
      
    } catch (err) {
      console.error('Inventory fetch error:', err);
      setError('Failed to load inventory data');
    } finally {
      setLoading(false);
    }
  };

  const getCategoryName = (categoryId) => {
    const category = categories.find(cat => cat.id === categoryId);
    return category ? category.name : 'Unknown';
  };

  const getStockStatus = (stock, minStock) => {
    if (stock === 0) return { text: 'खत्म', color: 'bg-red-100 text-red-800' };
    if (stock <= minStock) return { text: 'कम', color: 'bg-yellow-100 text-yellow-800' };
    return { text: 'उपलब्ध', color: 'bg-green-100 text-green-800' };
  };

  if (loading) {
    return (
      <div className="bg-white rounded-xl p-6 shadow">
        <h2 className="text-lg font-semibold mb-4">ߓ Inventory / इन्वेंट्री</h2>
        <div className="flex justify-center py-8">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-white rounded-xl p-6 shadow">
        <h2 className="text-lg font-semibold mb-4">ߓ Inventory / इन्वेंट्री</h2>
        <div className="text-center py-8">
          <p className="text-red-600 mb-4">{error}</p>
          <button 
            onClick={fetchInventoryData}
            className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"
          >
            Retry / पुनः प्रयास
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-white rounded-xl p-6 shadow">
      <div className="flex justify-between items-center mb-4">
        <h2 className="text-lg font-semibold">ߓ Inventory / इन्वेंट्री</h2>
        <div className="flex space-x-2">
          <span className="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm">
            Items: {items.length}
          </span>
          <span className="px-3 py-1 bg-green-100 text-green-700 rounded-full text-sm">
            Categories: {categories.length}
          </span>
        </div>
      </div>

      {items.length > 0 ? (
        <div className="overflow-x-auto">
          <table className="w-full">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
                  Item / आइटम
                </th>
                <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
                  Category / श्रेणी
                </th>
                <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
                  Stock / स्टॉक
                </th>
                <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
                  Status / स्थिति
                </th>
              </tr>
            </thead>
            <tbody className="divide-y divide-gray-200">
              {items.slice(0, 8).map((item) => {
                const status = getStockStatus(item.current_stock || 0, item.min_stock_level || 0);
                return (
                  <tr key={item.id} className="hover:bg-gray-50">
                    <td className="px-4 py-2">
                      <div className="text-sm font-medium text-gray-900">{item.name}</div>
                      <div className="text-xs text-gray-500">SKU: {item.sku}</div>
                    </td>
                    <td className="px-4 py-2 text-sm text-gray-900">
                      {getCategoryName(item.category)}
                    </td>
                    <td className="px-4 py-2 text-sm text-gray-900">
                      {item.current_stock || 0} {item.unit || ''}
                    </td>
                    <td className="px-4 py-2">
                      <span className={`inline-flex px-2 py-1 text-xs rounded-full ${status.color}`}>
                        {status.text}
                      </span>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
          
          {items.length > 8 && (
            <div className="text-center mt-4">
              <button className="text-blue-600 hover:text-blue-800 text-sm">
                View All {items.length} Items / सभी देखें
              </button>
            </div>
          )}
        </div>
      ) : (
        <div className="text-center py-8 text-gray-500">
          <p>No inventory items found / कोई इन्वेंट्री आइटम नहीं मिला</p>
        </div>
      )}
    </div>
  );
};

export default InventorySection;
EOF
