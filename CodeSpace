# apps/staff/views.py - COMPLETE STAFF MANAGEMENT
from rest_framework import viewsets, status
from rest_framework.decorators import action
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from django.shortcuts import get_object_or_404
from django.db.models import Q, Count
from datetime import datetime, date
from .models import StaffProfile
from .serializers import StaffProfileSerializer

class StaffProfileViewSet(viewsets.ModelViewSet):
    """FIXED - Complete Staff Profile Management ViewSet"""
    queryset = StaffProfile.objects.all()
    serializer_class = StaffProfileSerializer
    permission_classes = [IsAuthenticated]
    
    def get_queryset(self):
        queryset = StaffProfile.objects.all()
        department = self.request.query_params.get('department')
        is_active = self.request.query_params.get('is_active')
        
        if department:
            queryset = queryset.filter(department=department)
        if is_active is not None:
            queryset = queryset.filter(is_active=is_active.lower() == 'true')
            
        return queryset.order_by('-created_at')
    
    @action(detail=False, methods=['get'])
    def department_stats(self, request):
        """Get staff statistics by department"""
        stats = StaffProfile.objects.values('department').annotate(
            total=Count('id'),
            active=Count('id', filter=Q(is_active=True))
        ).order_by('department')
        
        return Response(list(stats))
    
    @action(detail=True, methods=['get'])
    def attendance_summary(self, request, pk=None):
        """Get attendance summary for staff member"""
        staff = self.get_object()
        month = int(request.query_params.get('month', datetime.now().month))
        year = int(request.query_params.get('year', datetime.now().year))
        
        summary = {
            'staff_name': staff.name,
            'employee_id': staff.employee_id,
            'month': month,
            'year': year,
            'department': staff.department,
        }
        
        return Response(summary)
