# SSH to your server
ssh ubuntu@your-server
cd /home/ubuntu/hotel-management-backend
source venv/bin/activate

# Create comprehensive backup
python manage.py dumpdata > full_backup_$(date +%Y%m%d_%H%M%S).json

# Create app-specific backups (safer for restoration)
python manage.py dumpdata users > users_backup.json
python manage.py dumpdata menu > menu_backup.json  
python manage.py dumpdata rooms > rooms_backup.json
python manage.py dumpdata bills > bills_backup.json
python manage.py dumpdata staff > staff_backup.json
python manage.py dumpdata inventory > inventory_backup.json

echo "✅ Data backup complete"
///////////////////
# Remove all migration files (keeps __init__.py)
find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
find . -path "*/migrations/*.pyc" -delete

# Verify removal
echo "Migration files removed from these apps:"
ls -la apps/*/migrations/
///////////////////////////////
# Create migrations in dependency order

echo "ߓ Creating base app migrations..."
python manage.py makemigrations users
python manage.py makemigrations core

echo "ߓ Creating independent app migrations..."
python manage.py makemigrations menu
python manage.py makemigrations rooms  
python manage.py makemigrations inventory
python manage.py makemigrations notifications

echo "ߓ Creating dependent app migrations..."
python manage.py makemigrations staff    # depends on users
python manage.py makemigrations tables   # depends on users, menu  
python manage.py makemigrations bills    # depends on users, rooms, menu

echo "✅ Fresh migrations created for all apps"
/////////////////////////////////////////////////////
# Option A: If database exists but has schema issues
echo "ߔ Applying migrations with fake-initial..."
python manage.py migrate users --fake-initial
python manage.py migrate core --fake-initial
python manage.py migrate menu --fake-initial
python manage.py migrate rooms --fake-initial
python manage.py migrate inventory --fake-initial
python manage.py migrate notifications --fake-initial
python manage.py migrate staff --fake-initial
python manage.py migrate tables --fake-initial
python manage.py migrate bills --fake-initial

# Apply any remaining migrations
python manage.py migrate

# Option B: If you want completely fresh database (⚠️ DELETES ALL DATA)
# rm -f db.sqlite3  # Only if using SQLite
# python manage.py migrate
////////////////////////////////////////////////////////////
# Check migration status
python manage.py showmigrations

# Test database connectivity
python manage.py shell << 'EOF'
from apps.users.models import CustomUser
from apps.staff.models import StaffProfile, AttendanceRecord  
from apps.tables.models import RestaurantTable, TableOrder, OrderItem
from apps.bills.models import Bill, BillItem
from apps.menu.models import MenuItem
from apps.rooms.models import Room

print("✅ All models imported successfully")
print("User count:", CustomUser.objects.count())
print("Menu items:", MenuItem.objects.count())
print("Tables:", RestaurantTable.objects.count())
EOF

# Restart services
sudo systemctl restart gunicorn
sudo systemctl restart nginx

echo "ߎ Migration reset complete!"
////////////////////////////////////////////////////////
# If you get "table already exists" errors:
python manage.py migrate --fake-initial

# If you get foreign key constraint errors:
python manage.py migrate --fake
python manage.py makemigrations --merge
python manage.py migrate

# If specific app has issues:
python manage.py migrate staff --fake
python manage.py migrate tables --fake  
python manage.py migrate bills --fake

# Check what tables actually exist in database:
python manage.py dbshell << 'EOF'
.tables  -- For SQLite
-- SELECT tablename FROM pg_tables WHERE schemaname='public';  -- For PostgreSQL
.exit
EOF
/////////////////////////////////////////////////////////

# After successful migration, restore your data:
python manage.py loaddata users_backup.json
python manage.py loaddata menu_backup.json
python manage.py loaddata rooms_backup.json
# ... etc for other apps

# Or restore everything at once:
python manage.py loaddata full_backup_TIMESTAMP.json
//////////////////////////////////////////////////////////////
# Nuclear option - complete reset
rm -f db.sqlite3
find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
python manage.py makemigrations users core menu rooms inventory notifications staff tables bills
python manage.py migrate
python manage.py createsuperuser --email admin@hotel.com
///////////////////////////////////////////////////////////////////
